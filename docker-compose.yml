version: '3'
services:
  server:
    build:
      context: server
      dockerfile: Dockerfile
    image:  server
    container_name: server
    ports: 
      - 5000:5000
    networks: 
      - container-connection

  display_graph:
    build:
      context: display_graph
      dockerfile: Dockerfile
    image:  display_graph
    container_name: display_graph
    ports: 
      - 5005:5000
    depends_on: 
      - server
    volumes:
      - ./display_graph:/home/test-user/display_graph
    networks: 
      - container-connection
  
  get_min_max_avg:
    build:
      context: get_min_max_avg
      dockerfile: Dockerfile
    image:  get_min_max_avg
    container_name: get_min_max_avg
    ports: 
      - 5006:5000
    depends_on: 
      - server
    volumes:
      - ./get_min_max_avg:/home/test-user/get_min_max_avg
    networks: 
      - container-connection
  
  # export_to_csv:
  #   build:
  #     context: ./export_to_csv
  #     dockerfile: Dockerfile
  #   container_name: export_to_csv
  #   depends_on: server
  #   networks: 
  #     - container-connection


  rpi:
    build:
      context: rpi
      dockerfile: Dockerfile
    image:  rpi
    container_name: rpi_code
    depends_on: 
      - server
    volumes:
      - ./rpi:/home/test-user/rpi
    networks: 
      - container-connection
  
  consumer:
    build:
      context: consumer
      dockerfile: Dockerfile
    image:  consumer
    container_name: consumer
    depends_on: 
      - server
      - rabbitmq
    # volumes:
    #   - ./consumer:/home/test-user/consumer
    networks: 
      - container-connection
      
  producer:
    build:
      context: producer
      dockerfile: Dockerfile
    image:  producer
    container_name: producer
    depends_on: 
      - server
      - rpi
      - sensor_db
      - rabbitmq
    volumes:
      - ./producer:/home/test-user/producer
    networks: 
      - container-connection
  
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    restart: always
    environment: 
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_lib:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      - container-connection
  
  sensor_db:
    image: postgres:17.5
    restart: always
    container_name: sensor_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sensor_data
    # ports:
    #   - 5432:5432
    depends_on: 
      - server
    volumes:
      - sensor_data:/var/lib/postgresql/data
    networks: 
      - container-connection

volumes:
  rabbitmq_lib:
    driver: local
  rabbitmq_log:
    driver: local
  sensor_data:
    driver: local

networks:
  container-connection:
    driver: bridge
  